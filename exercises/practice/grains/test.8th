"grains.8th" f:include
needs exercism/test
with: test
11 tests

"Grains on square 1"
  expected: Result<uint64,string> = Ok 1UL
  expect_equal(square(1), expected)

SKIP-REST-OF-TESTS

"Grains on square 2"
  expected: Result<uint64,string> = Ok 2UL
  expect_equal(square(2), expected)

"Grains on square 3"
  expected: Result<uint64,string> = Ok 4UL
  expect_equal(square(3), expected)

"Grains on square 4"
  expected: Result<uint64,string> = Ok 8UL
  expect_equal(square(4), expected)

"Grains on square 16"
  expected: Result<uint64,string> = Ok 32768UL
  expect_equal(square(16), expected)

"Grains on square 32"
  expected: Result<uint64,string> = Ok 2147483648UL
  expect_equal(square(32), expected)

"Grains on square 64"
  expected: Result<uint64,string> = Ok 9223372036854775808UL
  expect_equal(square(64), expected)

"Square 0 is invalid"
  expected: Result<uint64,string> = Error "square must be between 1 and 64"
  expect_equal(square(0), expected)

"Negative square is invalid"
  expected: Result<uint64,string> = Error "square must be between 1 and 64"
  expect_equal(square -1, expected)

"Square greater than 64 is invalid"
  expected: Result<uint64,string> = Error "square must be between 1 and 64"
  expect_equal(square(65), expected)

"Returns the total number of grains on the board"
  expected: Result<uint64,string> = Ok 18446744073709551615UL
  expect_equal(total, expected)
