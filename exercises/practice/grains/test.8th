"grains.8th" f:include
needs exercism/test
with: test
11 tests

"Grains on square 1"
  expected: Result<uint64,string> = Ok 1UL
    ( 1 square )
    expected
    equal

SKIP-REST-OF-TESTS

"Grains on square 2"
  expected: Result<uint64,string> = Ok 2UL
    ( 2 square )
    expected
    equal

"Grains on square 3"
  expected: Result<uint64,string> = Ok 4UL
    ( 3 square )
    expected
    equal

"Grains on square 4"
  expected: Result<uint64,string> = Ok 8UL
    ( 4 square )
    expected
    equal

"Grains on square 16"
  expected: Result<uint64,string> = Ok 32768UL
    ( 16 square )
    expected
    equal

"Grains on square 32"
  expected: Result<uint64,string> = Ok 2147483648UL
    ( 32 square )
    expected
    equal

"Grains on square 64"
  expected: Result<uint64,string> = Ok 9223372036854775808UL
    ( 64 square )
    expected
    equal

"Square 0 is invalid"
  expected: Result<uint64,string> = Error "square must be between 1 and 64"
    ( 0 square )
    expected
    equal

"Negative square is invalid"
  expected: Result<uint64,string> = Error "square must be between 1 and 64"
  expect_equal(square -1, expected)

"Square greater than 64 is invalid"
  expected: Result<uint64,string> = Error "square must be between 1 and 64"
    ( 65 square )
    expected
    equal

"Returns the total number of grains on the board"
  expected: Result<uint64,string> = Ok 18446744073709551615UL
  expect_equal(total, expected)
