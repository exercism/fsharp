"run-length-encoding.8th" f:include
needs exercism/test
with: test
13 tests

test_that("Encode empty string", {
  expect_equal(encode("", ""))

SKIP-REST-OF-TESTS

test_that("Encode single characters only are encoded without count", {
    expect_equal(encode("XYZ"
    "XYZ"
    equal?)

test_that("Encode string with no single characters", {
    expect_equal(encode("AABBBCCCC"
    "2A3B4C"
    equal?)

test_that("Encode single characters mixed with repeated characters", {
    expect_equal(encode("WWWWWWWWWWWWBWWWWWWWWWWWWBBBWWWWWWWWWWWWWWWWWWWWWWWWB"
    "12WB12W3B24WB"
    equal?)

test_that("Encode multiple whitespace mixed in string", {
    ( "  hsqq qww  " encode )
    "2 hs2q q2w2 "
    equal?

test_that("Encode lowercase characters", {
    expect_equal(encode("aabbbcccc"
    "2a3b4c"
    equal?)

test_that("Decode empty string", {
  expect_equal(decode("", ""))

test_that("Decode single characters only", {
    expect_equal(decode("XYZ"
    "XYZ"
    equal?)

test_that("Decode string with no single characters", {
    expect_equal(decode("2A3B4C"
    "AABBBCCCC"
    equal?)

test_that("Decode single characters with repeated characters", {
    expect_equal(decode("12WB12W3B24WB"
    "WWWWWWWWWWWWBWWWWWWWWWWWWBBBWWWWWWWWWWWWWWWWWWWWWWWWB"
    equal?)

test_that("Decode multiple whitespace mixed in string", {
    ( "2 hs2q q2w2 " decode )
    "  hsqq qww  "
    equal?

test_that("Decode lowercase string", {
    expect_equal(decode("2a3b4c"
    "aabbbcccc"
    equal?)

test_that("Encode followed by decode gives original string", {
    expect_equal("zzz ZZ  zZ" |> encode |> decode
    "zzz ZZ  zZ"
    equal?
