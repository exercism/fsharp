"atbash-cipher.8th" f:include
needs exercism/test
with: test
14 tests

test_that("Encode yes", {
    expect_equal(encode("yes"
    "bvh"
    equal?)

SKIP-REST-OF-TESTS

test_that("Encode no", {
    expect_equal(encode("no"
    "ml"
    equal?)

test_that("Encode OMG", {
    expect_equal(encode("OMG"
    "lnt"
    equal?)

test_that("Encode spaces", {
    expect_equal(encode "O M G"
    "lnt"
    equal?

test_that("Encode mindblowingly", {
    expect_equal(encode "mindblowingly"
    "nrmwy oldrm tob"
    equal?

test_that("Encode numbers", {
    expect_equal(encode "Testing,1 2 3, testing."
    "gvhgr mt123 gvhgr mt"
    equal?

test_that("Encode deep thought", {
    expect_equal(encode "Truth is fiction."
    "gifgs rhurx grlm"
    equal?

test_that("Encode all the letters", {
    expect_equal(encode "The quick brown fox jumps over the lazy dog."
    "gsvjf rxpyi ldmul cqfnk hlevi gsvoz abwlt"
    equal?

test_that("Decode exercism", {
    expect_equal(decode "vcvix rhn"
    "exercism"
    equal?

test_that("Decode a sentence", {
    expect_equal(decode "zmlyh gzxov rhlug vmzhg vkkrm thglm v"
    "anobstacleisoftenasteppingstone"
    equal?

test_that("Decode numbers", {
    expect_equal(decode "gvhgr mt123 gvhgr mt"
    "testing123testing"
    equal?

test_that("Decode all the letters", {
    expect_equal(decode "gsvjf rxpyi ldmul cqfnk hlevi gsvoz abwlt"
    "thequickbrownfoxjumpsoverthelazydog"
    equal?

test_that("Decode with too many spaces", {
    expect_equal(decode "vc vix    r hn"
    "exercism"
    equal?

test_that("Decode with no spaces", {
    expect_equal(decode("zmlyhgzxovrhlugvmzhgvkkrmthglmv"
    "anobstacleisoftenasteppingstone"
    equal?)
