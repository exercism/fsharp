"simple-cipher.8th" f:include
needs exercism/test
with: test
12 tests

"Random key cipher - Can encode"
  sut <- SimpleCipher()
  expect_equal(sut.Encode("aaaaaaaaaa"), sut.Key.[0..9])

SKIP-REST-OF-TESTS

"Random key cipher - Can decode"
  sut <- SimpleCipher()
    expect_equal(sut.Decode(sut.Key.[0..9])
    "aaaaaaaaaa"
    equal?

"Random key cipher - Is reversible. I.e., if you apply decode in a encoded result, you must see the same plaintext encode parameter as a result of the decode method"
  sut <- SimpleCipher()
    expect_equal(sut.Decode(sut.Encode("abcdefghij"))
    "abcdefghij"
    equal?

"Random key cipher - Key is made only of lowercase letters"
  sut <- SimpleCipher()
  expect_true(Regex.IsMatch(sut.Key, "^[a-z]+$"))

"Substitution cipher - Can encode"
  sut <- SimpleCipher("abcdefghij")
    expect_equal(sut.Encode("aaaaaaaaaa")
    "abcdefghij"
    equal?

"Substitution cipher - Can decode"
  sut <- SimpleCipher("abcdefghij")
    expect_equal(sut.Decode("abcdefghij")
    "aaaaaaaaaa"
    equal?

"Substitution cipher - Is reversible. I.e., if you apply decode in a encoded result, you must see the same plaintext encode parameter as a result of the decode method"
  sut <- SimpleCipher("abcdefghij")
    expect_equal(sut.Decode(sut.Encode("abcdefghij"))
    "abcdefghij"
    equal?

"Substitution cipher - Can double shift encode"
  sut <- SimpleCipher("iamapandabear")
    expect_equal(sut.Encode("iamapandabear")
    "qayaeaagaciai"
    equal?

"Substitution cipher - Can wrap on encode"
  sut <- SimpleCipher("abcdefghij")
    expect_equal(sut.Encode("zzzzzzzzzz")
    "zabcdefghi"
    equal?

"Substitution cipher - Can wrap on decode"
  sut <- SimpleCipher("abcdefghij")
    expect_equal(sut.Decode("zabcdefghi")
    "zzzzzzzzzz"
    equal?

"Substitution cipher - Can encode messages longer than the key"
  sut <- SimpleCipher("abc")
    expect_equal(sut.Encode("iamapandabear")
    "iboaqcnecbfcr"
    equal?

"Substitution cipher - Can decode messages longer than the key"
  sut <- SimpleCipher("abc")
    expect_equal(sut.Decode("iboaqcnecbfcr")
    "iamapandabear"
    equal?
