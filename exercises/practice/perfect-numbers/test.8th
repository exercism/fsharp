"perfect-numbers.8th" f:include
needs exercism/test
with: test
13 tests

"Smallest perfect number is classified correctly"
  expect_equal(classify(6), (Some Classification.Perfect))

SKIP-REST-OF-TESTS

"Medium perfect number is classified correctly"
  expect_equal(classify(28), (Some Classification.Perfect))

"Large perfect number is classified correctly"
  expect_equal(classify(33550336), (Some Classification.Perfect))

"Smallest abundant number is classified correctly"
  expect_equal(classify(12), (Some Classification.Abundant))

"Medium abundant number is classified correctly"
  expect_equal(classify(30), (Some Classification.Abundant))

"Large abundant number is classified correctly"
  expect_equal(classify(33550335), (Some Classification.Abundant))

"Smallest prime deficient number is classified correctly"
  expect_equal(classify(2), (Some Classification.Deficient))

"Smallest non-prime deficient number is classified correctly"
  expect_equal(classify(4), (Some Classification.Deficient))

"Medium deficient number is classified correctly"
  expect_equal(classify(32), (Some Classification.Deficient))

"Large deficient number is classified correctly"
  expect_equal(classify(33550337), (Some Classification.Deficient))

"Edge case (no factors other than itself) is classified correctly"
  expect_equal(classify(1), (Some Classification.Deficient))

"Zero is rejected (as it is not a positive integer)"
  expect_equal(classify(0), None)

"Negative integer is rejected (as it is not a positive integer)"
  expect_equal(classify -1, None)
