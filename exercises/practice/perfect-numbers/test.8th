"perfect-numbers.8th" f:include
needs exercism/test
with: test
13 tests

"Smallest perfect number is classified correctly"
    ( 6 classify )
    Classification.Perfect
    equal

SKIP-REST-OF-TESTS

"Medium perfect number is classified correctly"
    ( 28 classify )
    Classification.Perfect
    equal

"Large perfect number is classified correctly"
    ( 33550336 classify )
    Classification.Perfect
    equal

"Smallest abundant number is classified correctly"
    ( 12 classify )
    Classification.Abundant
    equal

"Medium abundant number is classified correctly"
    ( 30 classify )
    Classification.Abundant
    equal

"Large abundant number is classified correctly"
    ( 33550335 classify )
    Classification.Abundant
    equal

"Smallest prime deficient number is classified correctly"
    ( 2 classify )
    Classification.Deficient
    equal

"Smallest non-prime deficient number is classified correctly"
    ( 4 classify )
    Classification.Deficient
    equal

"Medium deficient number is classified correctly"
    ( 32 classify )
    Classification.Deficient
    equal

"Large deficient number is classified correctly"
    ( 33550337 classify )
    Classification.Deficient
    equal

"Edge case (no factors other than itself) is classified correctly"
    ( 1 classify )
    Classification.Deficient
    equal

"Zero is rejected (as it is not a positive integer)"
    ( 0 classify )
    None
    equal

"Negative integer is rejected (as it is not a positive integer)"
  expect_equal(classify -1, None)
