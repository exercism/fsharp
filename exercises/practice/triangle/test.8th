"triangle.8th" f:include
needs exercism/test
with: test
21 tests

"Equilateral returns all sides are equal"
  expect_true(equilateral c(2.0, 2.0, 2.0))

SKIP-REST-OF-TESTS

"Equilateral returns any side is unequal"
  expect_false(equilateral c(2.0, 3.0, 2.0))

"Equilateral returns no sides are equal"
  expect_false(equilateral c(5.0, 4.0, 6.0))

"Equilateral returns all zero sides is not a triangle"
  expect_false(equilateral c(0.0, 0.0, 0.0))

"Equilateral returns sides may be floats"
  expect_true(equilateral c(0.5, 0.5, 0.5))

"Isosceles returns last two sides are equal"
  expect_true(isosceles c(3.0, 4.0, 4.0))

"Isosceles returns first two sides are equal"
  expect_true(isosceles c(4.0, 4.0, 3.0))

"Isosceles returns first and last sides are equal"
  expect_true(isosceles c(4.0, 3.0, 4.0))

"Equilateral triangles are also isosceles"
  expect_true(isosceles c(4.0, 4.0, 4.0))

"Isosceles returns no sides are equal"
  expect_false(isosceles c(2.0, 3.0, 4.0))

"Isosceles returns first triangle inequality violation"
  expect_false(isosceles c(1.0, 1.0, 3.0))

"Isosceles returns second triangle inequality violation"
  expect_false(isosceles c(1.0, 3.0, 1.0))

"Isosceles returns third triangle inequality violation"
  expect_false(isosceles c(3.0, 1.0, 1.0))

"Isosceles returns sides may be floats"
  expect_true(isosceles c(0.5, 0.4, 0.5))

"Scalene returns no sides are equal"
  expect_true(scalene c(5.0, 4.0, 6.0))

"Scalene returns all sides are equal"
  expect_false(scalene c(4.0, 4.0, 4.0))

"Scalene returns first and second sides are equal"
  expect_false(scalene c(4.0, 4.0, 3.0))

"Scalene returns first and third sides are equal"
  expect_false(scalene c(3.0, 4.0, 3.0))

"Scalene returns second and third sides are equal"
  expect_false(scalene c(4.0, 3.0, 3.0))

"Scalene returns may not violate triangle inequality"
  expect_false(scalene c(7.0, 3.0, 2.0))

"Scalene returns sides may be floats"
  expect_true(scalene c(0.5, 0.4, 0.6))
